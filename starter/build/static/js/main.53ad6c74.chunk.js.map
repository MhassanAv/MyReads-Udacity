{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Shelf.js","pages/Main.js","pages/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","Book","_ref","author","title","url","handler","_useState","useState","_useState2","slicedToArray","newShelf","setNewShelf","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","event","target","value","disabled","Shelf","shelfName","shelfChanger","Array","from","map","components_Book","key","authors","imageLinks","thumbnail","propTypes","PropTypes","string","func","array","Main","components_Shelf","react_router_dom","to","Search","search","setSearch","_useState3","_useState4","storeBooks","setStoreBooks","changeHandler","newBookShelf","API","useEffect","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","query","maxResults","sent","b","stop","apply","this","arguments","searchedBooks","showingBooks","length","filter","toLowerCase","includes","type","placeholder","trim","App","setBooks","App_regeneratorRuntime","getBooks","react_router","exact","path","element","pages_Search","pages_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.53ad6c74.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token)\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Book = ({ id, author, title, url, handler, shelf }) => {\r\n  const [newShelf, setNewShelf] = useState(shelf);\r\n\r\n  const handleChange = (event) => {\r\n    handler(event.target.value, id);\r\n    setNewShelf(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(\"${url}\")`,\r\n            }}\r\n          ></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select onChange={handleChange} value={newShelf}>\r\n              <option value=\"none\" disabled>\r\n                Move to...\r\n              </option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{title}</div>\r\n        <div className=\"book-authors\">{author}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nBook.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  author: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  handler: PropTypes.func.isRequired,\r\n  shelf: PropTypes.string.isRequired,\r\n};\r\nexport default Book;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Shelf = ({ shelfName, shelfChanger, books }) => {\r\n  //TODO : change the books object and save it's state\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelfName}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {Array.from(books).map((book) => {\r\n            if (\r\n              book.shelf === \"currentlyReading\" &&\r\n              shelfName === \"Currently Reading\"\r\n            ) {\r\n              return (\r\n                <Book\r\n                  id={book.id}\r\n                  key={book.id}\r\n                  author={book.authors}\r\n                  title={book.title}\r\n                  url={book.imageLinks.thumbnail}\r\n                  shelf={book.shelf}\r\n                  handler={shelfChanger}\r\n                />\r\n              );\r\n            }\r\n            if (book.shelf === \"wantToRead\" && shelfName === \"Want to Read\") {\r\n              return (\r\n                <Book\r\n                  id={book.id}\r\n                  key={book.id}\r\n                  author={book.authors}\r\n                  title={book.title}\r\n                  url={book.imageLinks.thumbnail}\r\n                  shelf={book.shelf}\r\n                  handler={shelfChanger}\r\n                />\r\n              );\r\n            }\r\n            if (book.shelf === \"read\" && shelfName === \"Read\") {\r\n              return (\r\n                <Book\r\n                  id={book.id}\r\n                  key={book.id}\r\n                  author={book.authors}\r\n                  title={book.title}\r\n                  url={book.imageLinks.thumbnail}\r\n                  shelf={book.shelf}\r\n                  handler={shelfChanger}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Shelf;\r\n\r\nBook.propTypes = {\r\n  shelfName: PropTypes.string,\r\n  shelfChanger: PropTypes.func,\r\n  books: PropTypes.array,\r\n};\r\n\r\n/*\r\nallowAnonLogging: true\r\nauthors: ['William E. Shotts, Jr.']\r\naverageRating: 4\r\ncanonicalVolumeLink: \"https://market.android.com/details?id=book-nggnmAEACAAJ\"\r\ncategories: ['COMPUTERS']\r\ncontentVersion: \"1.2.2.0.preview.2\"\r\ndescription: \"You've experienced the shiny, point-and-click surface of your Linux computer—now dive below and explore its depths with the power of the command line. The Linux Command Line takes you from your very first terminal keystrokes to writing full programs in Bash, the most popular Linux shell. Along the way you'll learn the timeless skills handed down by generations of gray-bearded, mouse-shunning gurus: file navigation, environment configuration, command chaining, pattern matching with regular expressions, and more. In addition to that practical knowledge, author William Shotts reveals the philosophy behind these tools and the rich heritage that your desktop Linux machine has inherited from Unix supercomputers of yore. As you make your way through the book's short, easily-digestible chapters, you'll learn how to: * Create and delete files, directories, and symlinks * Administer your system, including networking, package installation, and process management * Use standard input and output, redirection, and pipelines * Edit files with Vi, the world’s most popular text editor * Write shell scripts to automate common or boring tasks * Slice and dice text files with cut, paste, grep, patch, and sed Once you overcome your initial \\\"shell shock,\\\" you'll find that the command line is a natural and expressive way to communicate with your computer. Just don't be surprised if your mouse starts to gather dust. A featured resource in the Linux Foundation's \\\"Evolution of a SysAdmin\\\"\"\r\nid: \"nggnmAEACAAJ\"\r\nimageLinks: {smallThumbnail: 'http://books.google.com/books/content?id=nggnmAEAC…J&printsec=frontcover&img=1&zoom=5&source=gbs_api', thumbnail: 'http://books.google.com/books/content?id=nggnmAEAC…J&printsec=frontcover&img=1&zoom=1&source=gbs_api'}\r\nindustryIdentifiers: (2) [{…}, {…}]\r\ninfoLink: \"https://play.google.com/store/books/details?id=nggnmAEACAAJ&source=gbs_api\"\r\nlanguage: \"en\"\r\nmaturityRating: \"NOT_MATURE\"\r\npageCount: 480\r\npanelizationSummary: {containsEpubBubbles: false, containsImageBubbles: false}\r\npreviewLink: \"http://books.google.com/books?id=nggnmAEACAAJ&dq=linux&hl=&cd=3&source=gbs_api\"\r\nprintType: \"BOOK\"\r\npublishedDate: \"2012\"\r\npublisher: \"No Starch Press\"\r\nratingsCount: 2\r\nreadingModes: {text: true, image: false}\r\nshelf: \"currentlyReading\"\r\nsubtitle: \"A Complete Introduction\"\r\ntitle: \"The Linux Command Line\"\r\n}*/\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Shelf from \"../components/Shelf\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Main = ({ books, shelfChanger }) => {\r\n  const shelves = [\"Currently Reading\", \"Want to Read\", \"Read\"];\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          {shelves.map((shelf) => (\r\n            <Shelf\r\n              key={shelf}\r\n              shelfName={shelf}\r\n              shelfChanger={shelfChanger}\r\n              books={books}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nMain.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n};\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"../components/Book\";\r\nimport * as API from \"../BooksAPI\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Search = ({ books }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [storeBooks, setStoreBooks] = useState([]);\r\n\r\n  const updateSearch = (search) => {\r\n    setSearch(search.trim());\r\n  };\r\n\r\n  const changeHandler = (newBookShelf, id) => {\r\n    storeBooks.map((book) => {\r\n      if (book.id === id) {\r\n        API.update(book, newBookShelf);\r\n        return null;\r\n      }\r\n      return null;\r\n    });\r\n  };\r\n\r\n  //i nested 2 maps together because the update api dosn't affect the data coming from the search screen\r\n  //if there is a simpler way please let me know\r\n\r\n  useEffect(() => {\r\n    const searchedBooks = async () => {\r\n      let res;\r\n      search !== \"\" && (res = await API.search(search));\r\n      if (res) {\r\n        Array.from(res).map((book) => {\r\n          return (book.shelf = \"none\");\r\n        });\r\n\r\n        Array.from(res).map((book) => {\r\n          books.map((b) => {\r\n            if (b.id === book.id) {\r\n              book.shelf = b.shelf;\r\n            }\r\n            return null;\r\n          });\r\n          return null;\r\n        });\r\n        setStoreBooks(res);\r\n      }\r\n      if (!res) {\r\n        setStoreBooks([]);\r\n      }\r\n    };\r\n    searchedBooks();\r\n  }, [search]);\r\n\r\n  const showingBooks =\r\n    (search===\"\" && storeBooks.length === 0)\r\n      ? []\r\n      : (Array.from(storeBooks).filter((b) =>\r\n          b.title.toLowerCase().includes(search.toLowerCase())\r\n        ));\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            value={search}\r\n            onChange={(event) => updateSearch(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {showingBooks.length > 0 ? (\r\n            Array.from(showingBooks).map((book) => {\r\n              return (\r\n                <Book\r\n                  id={book.id}\r\n                  key={book.id}\r\n                  author={book.authors}\r\n                  title={book.title}\r\n                  url={book.imageLinks ? book.imageLinks.thumbnail : \"\"}\r\n                  shelf={book.shelf}\r\n                  handler={changeHandler}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  books: PropTypes.array,\r\n};\r\nexport default Search;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport * as API from \"./BooksAPI\";\nimport Main from \"./pages/Main\";\nimport Search from \"./pages/Search\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await API.getAll();\n      setBooks(res);\n    };\n    getBooks();\n  }, [books]);\n\n  const changeHandler = (newBookShelf, id) => {\n    books.map((book) => {\n      if (book.id === id) {\n        API.update(book, newBookShelf);\n        return null;\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route exact path=\"/search\" element={<Search books={books} />} />\n        <Route\n          exact\n          path=\"/\"\n          element={<Main books={books} shelfChanger={changeHandler} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}